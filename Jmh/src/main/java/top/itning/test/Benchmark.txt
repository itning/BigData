# JMH version: 1.21
# VM version: JDK 1.8.0_221, Java HotSpot(TM) 64-Bit Server VM, 25.221-b11
# VM invoker: C:\Program Files\Java\jdk1.8.0_221\jre\bin\java.exe
# VM options: -Dvisualvm.id=344968345450300 -javaagent:C:\Users\wangn\AppData\Local\JetBrains\Toolbox\apps\IDEA-U\ch-0\192.6817.14\lib\idea_rt.jar=14093:C:\Users\wangn\AppData\Local\JetBrains\Toolbox\apps\IDEA-U\ch-0\192.6817.14\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 10 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: top.itning.test.StringBuilderBenchmark.testStringAdd

# Run progress: 0.00% complete, ETA 00:05:20
# Fork: 1 of 2
# Warmup Iteration   1: 16086.542 ops/ms
# Warmup Iteration   2: 17238.634 ops/ms
# Warmup Iteration   3: 17579.265 ops/ms
Iteration   1: 17465.099 ops/ms
Iteration   2: 17444.679 ops/ms
Iteration   3: 17486.406 ops/ms
Iteration   4: 17502.654 ops/ms
Iteration   5: 17547.282 ops/ms
Iteration   6: 17424.217 ops/ms
Iteration   7: 17451.229 ops/ms
Iteration   8: 17524.558 ops/ms
Iteration   9: 17459.857 ops/ms
Iteration  10: 17550.721 ops/ms

# Run progress: 25.00% complete, ETA 00:04:04
# Fork: 2 of 2
# Warmup Iteration   1: 17384.965 ops/ms
# Warmup Iteration   2: 17474.199 ops/ms
# Warmup Iteration   3: 17571.222 ops/ms
Iteration   1: 17432.837 ops/ms
Iteration   2: 17488.532 ops/ms
Iteration   3: 17454.294 ops/ms
Iteration   4: 17563.864 ops/ms
Iteration   5: 17443.078 ops/ms
Iteration   6: 17469.020 ops/ms
Iteration   7: 17446.960 ops/ms
Iteration   8: 17490.999 ops/ms
Iteration   9: 17514.504 ops/ms
Iteration  10: 17478.390 ops/ms


Result "top.itning.test.StringBuilderBenchmark.testStringAdd":
  17481.959 ±(99.9%) 35.462 ops/ms [Average]
  (min, avg, max) = (17424.217, 17481.959, 17563.864), stdev = 40.838
  CI (99.9%): [17446.497, 17517.421] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_221, Java HotSpot(TM) 64-Bit Server VM, 25.221-b11
# VM invoker: C:\Program Files\Java\jdk1.8.0_221\jre\bin\java.exe
# VM options: -Dvisualvm.id=344968345450300 -javaagent:C:\Users\wangn\AppData\Local\JetBrains\Toolbox\apps\IDEA-U\ch-0\192.6817.14\lib\idea_rt.jar=14093:C:\Users\wangn\AppData\Local\JetBrains\Toolbox\apps\IDEA-U\ch-0\192.6817.14\bin -Dfile.encoding=UTF-8
# Warmup: 3 iterations, 10 s each
# Measurement: 10 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: top.itning.test.StringBuilderBenchmark.testStringBuilderAdd

# Run progress: 50.00% complete, ETA 00:02:42
# Fork: 1 of 2
# Warmup Iteration   1: 82070.555 ops/ms
# Warmup Iteration   2: 58108.374 ops/ms
# Warmup Iteration   3: 36718.063 ops/ms
Iteration   1: 35800.206 ops/ms
Iteration   2: 36594.161 ops/ms
Iteration   3: 36920.136 ops/ms
Iteration   4: 37036.747 ops/ms
Iteration   5: 36999.991 ops/ms
Iteration   6: 38331.911 ops/ms
Iteration   7: 39474.101 ops/ms
Iteration   8: 39191.202 ops/ms
Iteration   9: 38682.045 ops/ms
Iteration  10: 38619.325 ops/ms

# Run progress: 75.00% complete, ETA 00:01:21
# Fork: 2 of 2
# Warmup Iteration   1: 81720.586 ops/ms
# Warmup Iteration   2: 57769.642 ops/ms
# Warmup Iteration   3: 36730.987 ops/ms
Iteration   1: 36993.514 ops/ms
Iteration   2: 36598.524 ops/ms
Iteration   3: 36885.580 ops/ms
Iteration   4: 36904.296 ops/ms
Iteration   5: 36678.606 ops/ms
Iteration   6: 37004.588 ops/ms
Iteration   7: 36895.163 ops/ms
Iteration   8: 35515.092 ops/ms
Iteration   9: 37755.629 ops/ms
Iteration  10: 39439.458 ops/ms


Result "top.itning.test.StringBuilderBenchmark.testStringBuilderAdd":
  37416.014 ±(99.9%) 1002.492 ops/ms [Average]
  (min, avg, max) = (35515.092, 37416.014, 39474.101), stdev = 1154.471
  CI (99.9%): [36413.522, 38418.506] (assumes normal distribution)


# Run complete. Total time: 00:05:25

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt      Score      Error   Units
StringBuilderBenchmark.testStringAdd         thrpt   20  17481.959 ±   35.462  ops/ms
StringBuilderBenchmark.testStringBuilderAdd  thrpt   20  37416.014 ± 1002.492  ops/ms
